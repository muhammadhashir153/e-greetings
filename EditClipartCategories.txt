import React, { useState } from "react";
import { Row, Col, Card, Form } from "react-bootstrap";
import { useForm } from "react-hook-form";
import * as yup from "yup";
import { yupResolver } from "@hookform/resolvers/yup";
import Select from "react-select";
import { Editor } from "react-draft-wysiwyg";

// styles
import "react-draft-wysiwyg/dist/react-draft-wysiwyg.css";

// components
import PageTitle from "../../../components/PageTitle";
import FileUploader from "../../../components/FileUploader";
import { FormInput } from "../../../components";

const EditClipartCategories = () => {
    const [editorState, setEditorState] = useState<any>();
    const categories = [
      {
        label: "Shopping",
        options: [
          { value: "SH1", label: "Shopping 1" },
          { value: "SH2", label: "Shopping 2" },
          { value: "SH3", label: "Shopping 3" },
        ],
      },
      {
        label: "CRM",
        options: [
          { value: "CRM1", label: "Crm 1" },
          { value: "CRM2", label: "Crm 2" },
          { value: "CRM3", label: "Crm 3" },
          { value: "CRM4", label: "Crm 4" },
        ],
      },
      {
        label: "eCommerce",
        options: [
          { value: "E1", label: "eCommerce 1" },
          { value: "E2", label: "eCommerce 2" },
          { value: "E3", label: "eCommerce 3" },
          { value: "E4", label: "eCommerce 4" },
        ],
      },
    ];
    /*
     * form validation schema
     */
    const schemaResolver = yupResolver(
      yup.object().shape({
        name: yup.string().required("Please enter Project Name"),
        reference: yup.string().required("Please enter Project Name"),
        summary: yup.string().required("Please enter Project Name"),
        price: yup.string().required("Please enter Project Name"),
        comment: yup.string().required("Please enter Project Name"),
        metatitle: yup.string().required("Please enter Project Name"),
        metakeywords: yup.string().required("Please enter Project Name"),
        metadescription: yup.string().required("Please enter Project Name"),
      })
    );
  
    /*
     * form methods
     */
    const methods = useForm({ resolver: schemaResolver });
    const {
      handleSubmit,
      register,
      control,
      formState: { errors },
    } = methods;
  
    /**
     * On editor body change
     */
    const onEditorStateChange = (editorStates: any) => {
      setEditorState(editorStates);
    };
  
    return (
      <>
        <PageTitle
          breadCrumbItems={[
            { label: "Categories", path: "/apps/ecommerce/categories-detail" },
            {
              label: "Edit Clipart Categories",
              path: "/apps/ecommerce/categories-detail",
              active: true,
            },
          ]}
          title={"Edit Clipart Categories"}
        />
  
        <form onSubmit={handleSubmit(() => {})}>
          <Row>
            <Col lg={6}>
              <Card>
                <Card.Body>
                  <h5 className="text-uppercase bg-light p-2 mt-0 mb-3">
                    Add Category
                  </h5>
                  <FormInput
                    name="name"
                    label="Category Name"
                    placeholder="Enter Category Name"
                    containerClass={"mb-3"}
                    register={register}
                    key="productname"
                    errors={errors}
                    control={control}
                  />
                   <h5 className="text-uppercase mt-0 mb-3 bg-light p-2">
                    Category Icon
                  </h5>
                  <FileUploader />

                  <Row>
            <Col>
              <div className="text-center mb-3">
                <button
                  type="button"
                  className="btn w-sm btn-light waves-effect me-1"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  className="btn w-sm btn-success waves-effect waves-light me-1"
                >
                  Save
                </button>
                <button
                  type="button"
                  className="btn w-sm btn-danger waves-effect waves-light me-1"
                >
                  Delete
                </button>
              </div>
            </Col>
          </Row>
                </Card.Body>
              </Card>
            </Col>
            <Col lg={6}>
              {/* <Card>
                <Card.Body>
                  <h5 className="text-uppercase mt-0 mb-3 bg-light p-2">
                    Product Images
                  </h5>
                  <FileUploader />
                </Card.Body>
              </Card> */}
  
              <Card>
              <Card.Body>
                  <h5 className="text-uppercase bg-light p-2 mt-0 mb-3">
                    Add Sub Category
                  </h5>
                  <Form.Group className="mb-3">
                  <Form.Label>Assign Main Category</Form.Label>
                  <Select
                    className="react-select react-select-container"
                    classNamePrefix="react-select"
                    options={categories}
                    id="product-category"
                  />
                </Form.Group>

                  <FormInput
                    name="reference"
                    label="Sub Category Name"
                    placeholder="Enter Sub Category"
                    containerClass={"mb-3"}
                    register={register}
                    key="reference"
                    errors={errors}
                    control={control}
                  />
                  <h5 className="text-uppercase mt-0 mb-3 bg-light p-2">
                   Sub Category Icon
                  </h5>
                  <FileUploader />
                  <Row>
            <Col>
              <div className="text-center mb-3">
                <button
                  type="button"
                  className="btn w-sm btn-light waves-effect me-1"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  className="btn w-sm btn-success waves-effect waves-light me-1"
                >
                  Save
                </button>
                <button
                  type="button"
                  className="btn w-sm btn-danger waves-effect waves-light me-1"
                >
                  Delete
                </button>
              </div>
            </Col>
          </Row>
  
                </Card.Body>
              </Card>
            </Col>
          </Row>
  
          
        </form>
      </>
    );
  };

export default EditClipartCategories;
